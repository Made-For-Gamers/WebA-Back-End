// <auto-generated />
using System;
using Datalayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Middleware.Migrations
{
    [DbContext(typeof(AggDbContext))]
    [Migration("20230208231900_ProjectCategory")]
    partial class ProjectCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Datalayer.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f8c1258-9046-4bf5-a8cf-57ffdf5504e5"),
                            CategoryId = new Guid("cc5adc04-0e95-44e8-8bc9-d51c71c4408e"),
                            Description = "Cool test",
                            Name = "Test",
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("4dfedf09-112c-4a37-a58e-5f3e85919928"),
                            CategoryId = new Guid("cc5adc04-0e95-44e8-8bc9-d51c71c4408e"),
                            Description = "Cool test 2",
                            Name = "Test2",
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("6c77e641-6013-42bc-9aba-03bf67be2e5c"),
                            CategoryId = new Guid("c03a1b2c-cf79-4750-82a0-fc8e4a829a97"),
                            Description = "Cool test 3",
                            Name = "Test3",
                            UserId = 1
                        },
                        new
                        {
                            Id = new Guid("ed0b541c-5ab5-429f-8ae8-dbe7a4567db8"),
                            CategoryId = new Guid("2eff621f-4d1b-4014-8d42-5c406f2adb05"),
                            Description = "Cool test 4",
                            Name = "Test4",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Datalayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "email@email.email",
                            Name = "name",
                            PasswordHash = "fakehash",
                            UserId = new Guid("be0a7f8f-e1ba-4fc9-8a44-d0e5f3c4b412")
                        });
                });

            modelBuilder.Entity("Datalayer.Models.UserClaim", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Value");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("Middleware.Models.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Engine")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Platforms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProgrammingLanguages")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc5adc04-0e95-44e8-8bc9-d51c71c4408e"),
                            Engine = "0",
                            Platforms = "0,1",
                            ProgrammingLanguages = "0"
                        },
                        new
                        {
                            Id = new Guid("c03a1b2c-cf79-4750-82a0-fc8e4a829a97"),
                            Engine = "1",
                            Platforms = "0,1,2",
                            ProgrammingLanguages = "0,2"
                        },
                        new
                        {
                            Id = new Guid("2eff621f-4d1b-4014-8d42-5c406f2adb05"),
                            Engine = "2",
                            Platforms = "3",
                            ProgrammingLanguages = "1"
                        });
                });

            modelBuilder.Entity("Datalayer.Models.Project", b =>
                {
                    b.HasOne("Datalayer.Models.User", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Datalayer.Models.UserClaim", b =>
                {
                    b.HasOne("Datalayer.Models.User", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Datalayer.Models.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
